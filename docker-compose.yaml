services:
  postgres:
    image: postgres:17.4
    container_name: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./DBs/postgres/dump.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - db-network

  mongodb:
    image: mongo:8.0
    container_name: mongodb
    command: mongod --noauth  
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./DBs/mongo/init.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - db-network

  neo4j:
    image: neo4j:5.26
    container_name: neo4j
    environment:
      NEO4J_AUTH: none
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/import
      - neo4j_plugins:/plugins
    networks:
      - db-network

  elasticsearch:
    image: elasticsearch:8.17.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - db-network

  kibana:
    image: kibana:8.17.5
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - db-network
      
  redis:
    image: redis:7.4
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - db-network

networks:
  db-network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  elasticsearch_data:
  redis_data:
